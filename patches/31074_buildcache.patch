diff --git a/lib/spack/spack/binary_distribution.py b/lib/spack/spack/binary_distribution.py
index c329287de8fa..b968e291b26a 100644
--- a/lib/spack/spack/binary_distribution.py
+++ b/lib/spack/spack/binary_distribution.py
@@ -6,6 +6,7 @@
 import codecs
 import collections
 import hashlib
+import io
 import json
 import os
 import shutil
@@ -638,6 +639,9 @@ def get_buildfile_manifest(spec):
 
     exclude_list = (".spack", "man")
 
+    prefixes = [d.prefix for d in spec.traverse(root=False, deptype="all")]
+    prefixes.append(spec.prefix)
+
     # Do this at during tarball creation to save time when tarball unpacked.
     # Used by make_package_relative to determine binaries to change.
     for root, dirs, files in os.walk(spec.prefix, topdown=True):
@@ -680,8 +684,18 @@ def get_buildfile_manifest(spec):
                     added = True
 
             if relocate.needs_text_relocation(m_type, m_subtype):
-                data["text_to_relocate"].append(rel_path_name)
-                added = True
+                contents = ""
+                with io.open(path_name, "r", errors="ignore") as f:
+                    contents = f.readline()
+                    if contents.startswith("#!"):
+                        contents = ""
+                    contents += f.read()
+
+                for prefix in prefixes:
+                    if prefix in contents:
+                        data["text_to_relocate"].append(rel_path_name)
+                        added = True
+                        break
 
             if not added:
                 data["other"].append(path_name)
diff --git a/lib/spack/spack/test/binary_distribution.py b/lib/spack/spack/test/binary_distribution.py
new file mode 100644
index 000000000000..9b3e3112af7c
--- /dev/null
+++ b/lib/spack/spack/test/binary_distribution.py
@@ -0,0 +1,22 @@
+# Copyright 2013-2022 Lawrence Livermore National Security, LLC and other
+# Spack Project Developers. See the top-level COPYRIGHT file for details.
+#
+# SPDX-License-Identifier: (Apache-2.0 OR MIT)
+
+from llnl.util.filesystem import join_path
+
+from spack.binary_distribution import get_buildfile_manifest
+from spack.main import SpackCommand
+from spack.spec import Spec
+
+install = SpackCommand("install")
+
+
+def test_text_relocate_if_needed(install_mockery, mock_fetch, monkeypatch, capfd):
+    spec = Spec("needs-text-relocation").concretized()
+    install(str(spec))
+
+    manifest = get_buildfile_manifest(spec)
+    assert join_path("bin", "exe") in manifest["text_to_relocate"]
+    assert join_path("bin", "otherexe") not in manifest["text_to_relocate"]
+    assert join_path("bin", "secretexe") not in manifest["text_to_relocate"]
diff --git a/var/spack/repos/builtin.mock/packages/needs-text-relocation/package.py b/var/spack/repos/builtin.mock/packages/needs-text-relocation/package.py
new file mode 100644
index 000000000000..9b2654dd8343
--- /dev/null
+++ b/var/spack/repos/builtin.mock/packages/needs-text-relocation/package.py
@@ -0,0 +1,27 @@
+# Copyright 2013-2022 Lawrence Livermore National Security, LLC and other
+# Spack Project Developers. See the top-level COPYRIGHT file for details.
+#
+# SPDX-License-Identifier: (Apache-2.0 OR MIT)
+from spack.package import *
+
+
+class NeedsTextRelocation(Package):
+    """A dumy package that encodes its prefix."""
+
+    homepage = "https://www.cmake.org"
+    url = "https://cmake.org/files/v3.4/cmake-3.4.3.tar.gz"
+
+    version("0.0.0", "12345678qwertyuiasdfghjkzxcvbnm0")
+
+    def install(self, spec, prefix):
+        mkdirp(prefix.bin)
+
+        exe = join_path(prefix.bin, "exe")
+        with open(exe, "w") as f:
+            f.write(prefix)
+        set_executable(exe)
+
+        otherexe = join_path(prefix.bin, "otherexe")
+        with open(otherexe, "w") as f:
+            f.write("Lorem Ipsum")
+        set_executable(otherexe)
